from urllib.request import urlopen, Request
from bs4 import BeautifulSoup
from nltk.sentiment.vader import SentimentIntensityAnalyzer 
import pandas as pd
import matplotlib.pyplot as plt
from datetime import date






finviz_url="https://finviz.com/quote.ashx?t="
tickers =["AMZN","GOOOG","MSFT","META","NVDA","AAPL"]

news_tables = {}


for ticker in tickers :
    url = finviz_url + ticker

    req = Request(url=url, headers={"user-agent":"my-app"})
    response =urlopen(req)
    html=BeautifulSoup(response, 'html.parser')
    # print(html.prettify(encoding="utf-8"))
    news_table = html.find(id='news-table')
    news_tables[ticker] = news_table

    

parsed_data = []


today_date= date.today()


for ticker, news_table in news_tables.items():
    last_date = ''
    for row in news_table.findAll('tr'):
        title = row.a.text
        date_data = row.td.text.strip().split()
        # print(date_data)
        if len(date_data) > 1:
            last_date = date_data[0] 
            time = date_data[1]
        else:
            time = date_data[0]
        
        parsed_data.append([ticker, last_date, time,title])

      

df = pd.DataFrame(parsed_data, columns=['ticker','date','time','title'])
df["date"] = df['date'].replace("Today",today_date)
vader = SentimentIntensityAnalyzer()

f = lambda title: vader.polarity_scores(title)["compound"]


df["compound"] = df['title'].apply(f)



df["date"] = pd.to_datetime(df.date).dt.date


plt.figure(figsize=(10,8))

df_new = df.copy()

df_new = df_new.drop(columns=["time", "title"], axis=1)

mean_df= df_new.groupby(['ticker','date']).mean()
mean_df=mean_df.unstack()
mean_df = mean_df.xs('compound',axis='columns').transpose()
mean_df.plot(kind='bar')
plt.show
